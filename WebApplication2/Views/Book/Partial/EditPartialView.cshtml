
@model WebApplication2.ViewModel.BookView
<link href="~/Content/style.css" rel="stylesheet" />

@using (Ajax.BeginForm("Edit", "Book", new AjaxOptions { HttpMethod = "POST", UpdateTargetId = "content-book" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Книга</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.AuthorId, "Автор", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select id="authorList" name="author" class="form-control"></select>
                @*@Html.DropDownListFor(model => model.AuthorId, ViewBag.Authors as SelectList, new { htmlAttributes = new { @class = "dropdown" } })*@
                @Html.ValidationMessageFor(model => model.AuthorId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Title, "Название", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Pages, "Кол-во страниц", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Pages, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Pages, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price, "Цена", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.GenreId, "Жанр", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">

                @*@Html.DropDownListFor(model => model.GenreId, ViewBag.Genres as SelectList, new { htmlAttributes = new { @class = "dropdown" } })*@
                <select id="genreList" name="genre" class="form-control"></select>
                @Html.ValidationMessageFor(model => model.GenreId, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Создать" class="btn btn-default" />
            </div>
        </div>
    </div>
}



<script src="http://code.jquery.com/jquery-3.1.1.min.js"></script>
<script type="text/javascript">
    $.ajax({
        url: '@Url.Action("GenreDropDown")',
        type: 'GET',
        data: {},
        success: function (data) {
            var str = '';
            for (var i = 0; i < data.length; i++) {
                str += '<option value="' + data[i].Id + '">' + data[i].Name + '</option>';
            }
            $("#genreList").html(str);
        }
    })

        $.ajax({
        url: '@Url.Action("AuthorDropDown")',
        type: 'GET',
        data: {},
        success: function (data) {
            console.log(data)
            var str2 = '';
            for (var i = 0; i < data.length; i++) {
                str2 += '<option value="' + data[i].Id + '">' + data[i].LastName + '</option>';
            }
            $("#authorList").html(str2);
        }
    })
</script>

<div>
    @Html.ActionLink("Back to List", "Index")
</div>